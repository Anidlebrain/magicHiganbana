# Configuration file

##########################################################################################################
# automation
#--------------------------------------------------------------------------------------------------------#
# Automation configuration
##########################################################################################################

automation {
    # The time (in ticks) between 2 push/pulls of an Extractor
    # 1 means every tick, 20 means once every second and so on [range: 1 ~ 200, default: 10]
    I:extractorDelay=10

    # How many items from a stack an Extractor can push/pull at once [range: 1 ~ 64, default: 64]
    I:extractorMaxStack=64
}


##########################################################################################################
# machines
#--------------------------------------------------------------------------------------------------------#
# Machines configuration
##########################################################################################################

machines {
    # How many Primordium items can the Atomic Reshaper hold in its internal buffer [range: 1 ~ 64, default: 4]
    I:atomicReshaperMaxPrimordium=4

    # The base amount of time (in ticks) that the Atomic Reassembler takes to process 1 item
    # Several recipes have shorter or longer processing time, which are all derived from this value [range: 1 ~ 3000, default: 200]
    I:atomicReshaperProcessTime=200

    # Automatically generate Rotary Grinder, Magnetic Reassembler and Ore Refinery recipes to process ores?
    # If false, only recipes for vanilla ores and Prodigy Tech ingots will be registered [default: true]
    B:autoOreRecipes=true

    # The base amount of time (in ticks) that the Automatic Crystal Cutter takes to harvest 1 stage [range: 1 ~ 3000, default: 100]
    I:automaticCrystalCutterHarvestTime=100

    # The time (in ticks) between 2 checks of the Automatic Crystal Cutter
    # 1 means every tick, 20 means once every second and so on
    # Lower value will make them more reactive to crystal growing, but will make them sligtly laggier when idle [range: 1 ~ 200, default: 60]
    I:automaticCrystalCutterIdleTime=60

    # The base amount of time (in ticks) that the Blower Furnace takes to process 1 item [range: 1 ~ 3000, default: 300]
    I:blowerFurnaceProcessTime=300

    # The base amount of time (in ticks) that the Heat Accumulator takes to charge 20 ticks of an Heat Capacitor [range: 20 ~ 200, default: 30]
    I:capacitorChargerChargeTime=30

    # A multiplier to the amount of time the Food Enricher takes to process an item
    # Actual time varies heavily depending on the enriched food and how much it enriches
    # but is always much higher than this value [range: 1 ~ 50, default: 20]
    I:foodEnricherBaseTime=20

    # The Food Enricher will not increase a food's food value beyond this amount (in half shanks) [range: 1 ~ 20, default: 20]
    I:foodEnricherFoodCap=20

    # How much does one Food Enricher operation increases the food value (in half shanks) [range: 1 ~ 20, default: 2]
    I:foodEnricherFoodIncrease=2

    # The Food Enricher will not increase a food's saturation ratio beyond this amount [range: 0.0 ~ 10.0, default: 1.2]
    S:foodEnricherSaturationCap=1.2

    # How much does one Food Enricher operation increases the saturation ratio [range: 0.0 ~ 2.0, default: 0.1]
    S:foodEnricherSaturationIncrease=0.1

    # The base amount of time (in ticks) that the Food Purifier takes to process an item, most will take much longer
    # For reference, Beetroots take 2.2x that time, Rotten Flesh takes 4.8x and Steaks 20.8x [range: 1 ~ 300, default: 10]
    I:foodPurifierBaseTime=10

    # The base amount of time (in ticks) that the Fuel Processor takes to process a fuel that yields 1 Fuel Pellet
    # Time for longer lasting fuels is derived from this value [range: 1 ~ 3000, default: 60]
    I:fuelProcessorBaseTime=60

    # Automatically generate Heat Sawmill recipes to cut wood into planks
    # If false, only recipes for vanilla logs and zorra will be registered [default: true]
    B:heatSawmillAutoPlankRecipes=true

    # Multiplier to the amount of planks the Heat Sawmil can extract from a single log (compared to manual crafting) [range: 1.0 ~ 10.0, default: 1.5]
    S:heatSawmillPlankMultiplier=1.5

    # The base amount of time (in ticks) that the Heat Sawmill takes to process 1 item [range: 1 ~ 3000, default: 200]
    I:heatSawmillProcessTime=200

    # Multiplier to the amount of planks the Heat Sawmil can extract from a single log (compared to manual crafting) [range: 1.0 ~ 10.0, default: 2.0]
    S:heatSawmillStickMultiplier=2.0

    # The chance that an item burned in the Incinerator gives Ash [range: 0.0 ~ 1.0, default: 1.0]
    S:incineratorChance=1.0

    # Show the Incinerator recipe for Ash in JEI [default: true]
    B:incineratorJEI=true

    # The base amount of time (in ticks) that the Incinerator takes to process 1 item [range: 1 ~ 3000, default: 200]
    I:incineratorProcessTime=200

    # The base amount of time (in ticks) that the Magnetic Reassembler takes to process 1 item
    # Several recipes have shorter or longer processing time, which are all derived from this value [range: 1 ~ 3000, default: 300]
    I:magneticReassemblerProcessTime=300

    # The chance the Ore Refinery produces a secondary ore [range: 0.0 ~ 1.0, default: 0.25]
    S:oreRefineryChance=0.25

    # By how much ore outputs are multiplied by when passing them through the Ore Refinery [range: 1 ~ 10, default: 2]
    I:oreRefineryOreMultiplier=2

    # The base amount of time (in ticks) that the Ore Refinery takes to process 1 item [range: 1 ~ 3000, default: 100]
    I:oreRefineryProcessTime=100

    # The base amount of time (in ticks) that the Primordialis Reactor takes to make 1 cycle [range: 1 ~ 3000, default: 60]
    I:primordialisReactorCycleTime=60

    # How many the Primordialis Reactor needs to consume to make 1 Primordium
    # Note that this can be divided by up to 9 by putting different items
    # This also means the number of cycles required ranges from this number to 1/81 [range: 9 ~ 5760, default: 576]
    I:primordialisReactorRequiredInput=576

    # By how much ore outputs are multiplied by when passing them through the Rotary Grinder [range: 1 ~ 10, default: 2]
    I:rotaryGrinderOreMultiplier=2

    # The base amount of time (in ticks) that the Rotary Grinder takes to process 1 item
    # Several recipes have shorter or longer processing time, which are all derived from this value [range: 1 ~ 3000, default: 300]
    I:rotaryGrinderProcessTime=300

    # How much gold (in nuggets) can the Solderer hold in its internal buffer [range: 9 ~ 20736, default: 81]
    I:soldererMaxGold=81

    # The base amount of time (in ticks) that the Solderer takes to make 1 Crude Circuit
    # The time of all other recipes are derived from this value [range: 1 ~ 3000, default: 400]
    I:soldererProcessTime=400

    # The base amount of time (in ticks) that 1 Tartaric Stoker lasts in the Tartaric Aeroheater [range: 1 ~ 32767, default: 1600]
    I:tartaricStokerTime=1600
}


##########################################################################################################
# power
#--------------------------------------------------------------------------------------------------------#
# Power generation configuration
##########################################################################################################

power {
    # The time (in ticks) one Energion Dust lasts in the Energion Aeroheater [range: 20 ~ 1728000, default: 2000]
    I:energionDuration=2000

    # A modifier to how fast Energion Crystals grow
    # 2 is about the growth of a single wheat on dry farmland, 4 is about single wheat on wet farmland [range: 0.1 ~ 25.0, default: 4.0]
    S:energionGrowthSpeed=4.0

    # The time (in ticks) a fully charged Heat Capacitor lasts [range: 20 ~ 1728000, default: 12000]
    I:heatCapacitorDuration=12000
}


##########################################################################################################
# zorra altar
#--------------------------------------------------------------------------------------------------------#
# Zorra Altar configuration
##########################################################################################################

"zorra altar" {
    # How many levels beyond the normal maximum can the Zorra Altar apply enchantments
    # Some enchantments don't take account of this limit [range: 0 ~ 100, default: 3]
    I:altarBonusLvl=3

    # A multiplier applied to all enchantment costs on the Zorra Altar
    # For example 1.5 means that everything costs 50% more than the base amount [range: 0.0 ~ 10.0, default: 0.6]
    S:altarCostMult=0.6

    # Cost multiplier for the unknown option
    # For example 0.5 means that the unknown option only costs 50% of the normal cost [range: 0.0 ~ 10.0, default: 0.5]
    S:altarUnknownMult=0.5
}


